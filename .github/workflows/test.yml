#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: TEST

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
 # schedule:
 #- cron: 30 23 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: x64.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化运行环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        #sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        #sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/naoki66/NEW_LEDE_Actions/master/depends-ubuntu )
        sudo -E apt-get -qq install bzip2  cpio curl gettext  git   subversion swig texinfo  unzip vim wget  
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
  
    - name: 载入配置feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新feeds\安装feeds、更新日期
      run: |
       cd openwrt 
       ./scripts/feeds update -a  &&  ./scripts/feeds install -a
       echo "DATE=$(date "+%Y年%m月%d日%H时%M分")" >> $GITHUB_ENV
       echo "DATE1=$(date "+%Y.%m.%d.%H:%M")" >> $GITHUB_ENV

    - name: 载入配置文件、生成固件日期
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        make defconfig

     
    - name: 读取更新内容
      run: |
        touch AAA.txt
        echo " Lean源码记录:" >> AAA.txt
        git -C openwrt log -1 --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:"<br/>更新人:%an<br/>时间:%cd<br/>更新内容:%s<br/>"  >> AAA.txt        
        echo " <br/>LeanPackag源码记录:" >> release.txt
        git -C openwrt/feeds/packages log -1 --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:"<br/>更新人: %an<br/>时间: %cd<br/>更新内容:%s<br/>"  >> AAA.txt        
        echo " <br/>LeanLuci源码新记录:" >> release.txt
        git -C openwrt/feeds/luci log -1 --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:"<br/>更新人: %an<br/>时间: %cd<br/>更新内容:%s<br/>"  >> AAA.txt        
        echo " <br/>SSRP源码记录:" >> release.txt
        git -C openwrt/feeds/helloworld log -1 --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:"<br/>更新人: %an<br/>时间: %cd<br/>更新内容: %s<br/>" >> AAA.txt
        #echo "AAAMESSGE<<EOF" >> $GITHUB_ENV
        #cat AAA.txt >> $GITHUB_ENV
        #echo "EOF" >> $GITHUB_ENV
        echo "DATE2=$(date "+%Y年%m月%d日%H时%M分")" >> $GITHUB_ENV

       
    #- name: Pushplus推送消息
    #  run: |
    #    echo "DATE2=$(date "+%Y年%m月%d日%H时%M分")" >> $GITHUB_ENV
    #    curl http://www.pushplus.plus/send -X POST -H "Content-Type:application/json" -d '{"title":"Gittest编译X64成功！","content":" 从${{ env.DATE }}开始到${{ env.DATE2 }}编译完成！<br/>${cat ./AAA.txt}","token":"${{ secrets.PUSHPLUS_TOKEN }}"}'

